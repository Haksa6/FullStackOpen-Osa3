{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","handleFilterChange","value","onChange","Persons","persons","handleRemovePerson","person","name","toLowerCase","includes","map","number","onClick","id","PersonForm","addName","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","errorMessage","setErrorMessage","useEffect","personService","event","console","log","target","preventDefault","noteObject","length","window","confirm","deletePerson","find","updatePerson","catch","error","concat","setTimeout","returnedName","ReactDOM","render","document","getElementById"],"mappings":"yLAceA,EAZA,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,mBACvB,OACE,+BACE,oDACE,uBACEC,MAASF,EAAQG,SAAYF,UCKxBG,EAVC,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,QAASL,EAAgC,EAAhCA,OAAQM,EAAwB,EAAxBA,mBACjC,OACED,EAAQL,QAAO,SAAAO,GAAM,OAAIA,EAAOC,KAAKC,cAAcC,SAASV,EAAOS,kBAAgBE,KAAI,SAAAJ,GAAM,OAC3F,gCACCA,EAAOC,KADR,IACeD,EAAOK,OAAO,wBAAQC,QAAU,kBAAKP,EAAmBC,EAAOC,KAAMD,EAAOO,KAA9D,sBADjBP,EAAOC,UCOVO,EAVI,SAAC,GAAyE,IAAxEC,EAAuE,EAAvEA,QAASC,EAA8D,EAA9DA,QAASC,EAAqD,EAArDA,iBAAkBC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,mBAClE,OACE,uBAAMC,SAAYL,EAAlB,UACE,yCAAW,uBAAOd,MAASe,EAASd,SAAYe,OAChD,2CAAa,uBAAOhB,MAASiB,EAAWhB,SAAYiB,OACpD,8BAAK,wBAAQE,KAAK,SAAb,uB,gBCNLC,EAAU,eAsBD,EApBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB5B,EAfA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAACd,EAAIe,GAElB,OADgBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBT,GAAMe,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAAAd,GAEb,OADgBU,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BT,IAC5BY,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCA5BK,EAlBM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAGNA,EAAQxB,SAAS,OAEhB,qBAAKyB,UAAW,UAAhB,SACGD,IAKL,qBAAKC,UAAU,QAAf,SACGD,KCiGQE,EA1GH,WACV,MAAgCC,mBAAS,IAAzC,mBAAQhC,EAAR,KAAiBiC,EAAjB,KACA,EAAgCD,mBAAS,IAAzC,mBAAQpB,EAAR,KAAiBsB,EAAjB,KACA,EAAoCF,mBAAS,IAA7C,mBAAQlB,EAAR,KAAmBqB,EAAnB,KACA,EAA8BH,mBAAS,IAAvC,mBAAQrC,EAAR,KAAgByC,EAAhB,KACA,EAA0CJ,mBAAS,MAAnD,mBAAQK,EAAR,KAAsBC,EAAtB,KAEAC,qBAAU,WACRC,IAEGnB,MAAK,SAAAC,GACJW,EAAWX,QAEd,IA8EH,OACE,gCACE,2CACE,cAAC,EAAD,CAAcO,QAAWQ,IACzB,cAAC,EAAD,CAAQ1C,OAAUA,EAAQC,mBA7BL,SAAC6C,GAC1BC,QAAQC,IAAIF,EAAMG,OAAO/C,OACzBuC,EAAUK,EAAMG,OAAO/C,UA4BrB,2CACE,cAAC,EAAD,CAAYc,QAlFF,SAAC8B,GACfA,EAAMI,iBACN,IAAMC,EAAa,CACjB3C,KAAMS,EACNL,OAAQO,GAEV,GAAGd,EAAQL,QAAO,SAAAQ,GAAI,OAAIA,EAAKA,OAAS2C,EAAW3C,QAAM4C,OAAS,GAChE,GAAGC,OAAOC,QAAP,UAAkBrC,EAAlB,2EAAmG,CACpG,IAAMsC,EAAelD,EAAQmD,MAAK,SAAAjD,GAAM,OAAEA,EAAOC,OAASS,KAC1D4B,EACUU,EAAazC,GAAIqC,GACxBzB,MAAK,SAAA+B,GACJnB,EAAWjC,EAAQM,KAAI,SAAAJ,GAAM,OAAGA,EAAOC,OAASS,EAAUwC,EAAelD,SAE1EmD,OAAM,SAAAC,GACLhB,EAAgB,kBAAD,OAAmB1B,EAAnB,6CAEjBqB,EAAWjC,EAAQuD,OAAOT,IAC1BZ,EAAW,IACXC,EAAa,IACbG,EAAgB,WAAD,OAAY1B,IAC3B4C,YAAW,WACTlB,EAAgB,QACf,WAGPE,EACQM,GACLzB,MAAK,SAAAoC,GACNxB,EAAWjC,EAAQuD,OAAOE,IAC1BvB,EAAW,IACXC,EAAa,IACbG,EAAgB,SAAD,OAAU1B,OAE1ByC,OAAM,SAAAC,GACLhB,EAAgB,iBAAD,OAAkB1B,OAEnC4C,YAAW,WACTlB,EAAgB,QACf,MA2C+B1B,QAAWA,EAASC,iBAvCjC,SAAC4B,GACxBC,QAAQC,IAAIF,EAAMG,OAAO/C,OACzBqC,EAAWO,EAAMG,OAAO/C,QAsCpBiB,UAAaA,EAAWC,mBApCH,SAAC0B,GAC1BC,QAAQC,IAAIF,EAAMG,OAAO/C,OACzBsC,EAAaM,EAAMG,OAAO/C,UAmCxB,yCACE,cAAC,EAAD,CAASG,QAAWA,EAASL,OAAUA,EAAQM,mBA9B1B,SAACE,EAAMM,GAC7BuC,OAAOC,QAAP,iBAAyB9C,EAAzB,SACCqC,EACQ/B,GACLY,MAAK,WACJY,EAAWjC,EAAQL,QAAO,SAAAO,GAAM,OAAIA,EAAOO,KAAOA,MAClDyB,EAAW,IACXC,EAAa,IACbG,EAAgB,WAAD,OAAYnC,OAE5BkD,OAAM,SAAAC,GACLrB,EAAWjC,EAAQL,QAAO,SAAAO,GAAM,OAAGA,EAAOC,OAASA,MACnDmC,EAAgB,kBAAD,OAAmBnC,EAAnB,6CAEfqD,YAAW,WACTlB,EAAgB,QACf,a,MCzFfoB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8a9dbbe1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({filter, handleFilterChange}) => {\r\n  return(\r\n    <form>\r\n      <div>filter shown with \r\n        <input \r\n          value = {filter} onChange = {handleFilterChange}>\r\n        </input>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Persons = ({persons, filter, handleRemovePerson}) => {\r\n  return(\r\n    persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase())).map(person =>(\r\n      <div key = {person.name}>\r\n      {person.name} {person.number}<button onClick={ () =>handleRemovePerson(person.name, person.id)}>delete</button>                   \r\n      </div>\r\n      ))\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = ({addName, newName, handleNameChange, newNumber, handleNumberChange}) => {\r\n  return(\r\n    <form onSubmit = {addName}>\r\n      <div>name: <input value = {newName} onChange = {handleNameChange}/></div>\r\n      <div>number: <input value = {newNumber} onChange = {handleNumberChange}/></div>\r\n      <div><button type=\"submit\">add</button></div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nexport default { \r\n  getAll, create, update, remove\r\n}","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  if(message.includes('Del' || 'Infor' || 'Fail')){\r\n    return(\r\n      <div className =\"deleted\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div className=\"added\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response=> {\n        setPersons(response)\n      })\n  }, [])\n  \n  const addName = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      name: newName,\n      number: newNumber,\n    }\n    if(persons.filter(name => name.name === noteObject.name).length > 0){\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n        const deletePerson = persons.find(person=>person.name === newName)\n        personService\n          .update(deletePerson.id, noteObject)\n          .then(updatePerson=> {\n            setPersons(persons.map(person=>(person.name === newName ? updatePerson : person)))\n          })\n          .catch(error=> {\n            setErrorMessage(`Information of ${newName} has already been removed from server`)\n          })\n          setPersons(persons.concat(noteObject))\n          setNewName('')\n          setNewNumber('')\n          setErrorMessage(`Updated ${newName}`)\n          setTimeout(()=>{\n            setErrorMessage(null)\n          }, 5000)\n      }\n    }else{\n      personService\n      .create(noteObject)\n        .then(returnedName => {\n        setPersons(persons.concat(returnedName))\n        setNewName('')\n        setNewNumber('')\n        setErrorMessage(`Added ${newName}`)\n    })\n      .catch(error =>{\n        setErrorMessage(`Failed to add ${newName}`)\n      })\n      setTimeout(()=>{\n        setErrorMessage(null)\n      }, 5000)\n    }\n    \n  }\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) =>{\n    console.log(event.target.value)\n    setFilter(event.target.value)\n  }\n  const handleRemovePerson = (name, id) =>{\n    if(window.confirm(`Delete ${name} ?`)){\n        personService\n        .remove(id)\n          .then(() =>{\n            setPersons(persons.filter(person => person.id !== id))\n            setNewName('')\n            setNewNumber('')\n            setErrorMessage(`Deleted ${name}`)\n          })\n          .catch(error => {\n            setPersons(persons.filter(person=> person.name !== name))\n            setErrorMessage(`Information of ${name} has already been removed from server`)\n          })\n            setTimeout(() =>{\n              setErrorMessage(null)\n            }, 5000)\n      }\n}\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <Notification message = {errorMessage}/>\n        <Filter filter = {filter} handleFilterChange = {handleFilterChange}/>\n      <h3>add a new</h3>\n        <PersonForm addName = {addName} newName = {newName} handleNameChange = {handleNameChange}\n        newNumber = {newNumber} handleNumberChange =  {handleNumberChange}/>\n      <h3>Numbers</h3>\n        <Persons persons = {persons} filter = {filter} handleRemovePerson = {handleRemovePerson} />\n    </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}